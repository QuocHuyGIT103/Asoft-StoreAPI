<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Store Management - @ViewData["Title"]</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js"></script>
    <!-- Bootstrap CSS cho validation và một số components -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100">
    <nav class="bg-blue-600 text-white p-4">
        <div class="container mx-auto flex justify-between">
            <div>
                <a href="@Url.Action("Index", "Home")" class="mr-4 hover:underline">Trang chủ</a>
                @if (User.Identity.IsAuthenticated)
                {
                    <a href="@Url.Action("Index", "ProductMvc")" class="mr-4 hover:underline">Sản phẩm</a>
                    <a href="@Url.Action("Index", "CustomerMvc")" class="mr-4 hover:underline">Khách hàng</a>
                    <a href="@Url.Action("Index", "InvoiceMvc")" class="mr-4 hover:underline">Hóa đơn</a>
                }
            </div>
            @if (User.Identity.IsAuthenticated)
            {
                <div class="flex items-center space-x-4">
                    <span class="text-sm">
                        <i class="fas fa-user"></i> Xin chào, @(User.Identity.Name ?? "Admin")
                    </span>
                    <a href="@Url.Action("Logout", "Home")" class="hover:underline">Đăng xuất</a>
                </div>
            }
            else
            {
                <a href="@Url.Action("Login", "Home")" class="hover:underline">Đăng nhập</a>
            }
        </div>
    </nav>

    <div class="container mx-auto p-4">
        <!-- Display success/error messages với Tailwind styling -->
        @if (TempData["Success"] != null)
        {
            <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4 relative" role="alert">
                <div class="flex items-center">
                    <i class="fas fa-check-circle mr-2"></i>
                    <span>@TempData["Success"]</span>
                </div>
                <button type="button" class="absolute top-0 bottom-0 right-0 px-4 py-3" onclick="this.parentElement.style.display='none'">
                    <i class="fas fa-times text-green-500"></i>
                </button>
            </div>
        }
        
        @if (TempData["Error"] != null)
        {
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4 relative" role="alert">
                <div class="flex items-center">
                    <i class="fas fa-exclamation-circle mr-2"></i>
                    <span>@TempData["Error"]</span>
                </div>
                <button type="button" class="absolute top-0 bottom-0 right-0 px-4 py-3" onclick="this.parentElement.style.display='none'">
                    <i class="fas fa-times text-red-500"></i>
                </button>
            </div>
        }

        @RenderBody()
    </div>

    <!-- jQuery for validation and Bootstrap components -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <!-- Bootstrap JS cho một số components nếu cần -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        async function callApi(method, url, data = null) {
            const token = document.cookie.replace(/(?:(?:^|.*;\s*)token\s*=\s*([^;]*).*$)|^.*$/, "$1");
            try {
                const response = await axios({
                    method: method,
                    url: url,
                    data: data,
                    headers: { 
                        Authorization: `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    }
                });
                return response.data;
            } catch (error) {
                console.error('API Error:', error);
                if (error.response && error.response.status === 401) {
                    // Redirect to login if unauthorized
                    window.location.href = '@Url.Action("Login", "Home")';
                }
                throw error;
            }
        }

        // Auto hide alerts after 5 seconds
        document.addEventListener('DOMContentLoaded', function() {
            setTimeout(function() {
                const alerts = document.querySelectorAll('[role="alert"]');
                alerts.forEach(function(alert) {
                    alert.style.transition = 'opacity 0.5s';
                    alert.style.opacity = '0';
                    setTimeout(function() {
                        if (alert.parentNode) {
                            alert.parentNode.removeChild(alert);
                        }
                    }, 500);
                });
            }, 5000);
        });
    </script>
    
    <!-- Render Scripts section - ĐÂY LÀ PHẦN QUAN TRỌNG ĐỂ FIX LỖI -->
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>