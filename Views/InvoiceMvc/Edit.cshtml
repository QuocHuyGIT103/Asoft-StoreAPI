@model StoreAPI.Models.Invoice
@{
    ViewData["Title"] = "Sửa hóa đơn";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var customers = ViewBag.Customers as List<StoreAPI.Models.Customer> ?? new List<StoreAPI.Models.Customer>();
    var products = ViewBag.Products as List<StoreAPI.Models.Product> ?? new List<StoreAPI.Models.Product>();
}

<div class="container mx-auto p-4 max-w-md">
    <h2 class="text-2xl font-bold mb-4">Sửa hóa đơn</h2>
    @if (ViewData["Error"] != null)
    {
        <p class="text-red-500 mb-4">@ViewData["Error"]</p>
    }
    <form action="/InvoiceMvc/Edit/@Model.InvoiceID" method="post" class="space-y-4" id="invoiceForm">
        @Html.AntiForgeryToken()
        <div>
            <label for="InvoiceID" class="block text-gray-700 font-medium">Mã hóa đơn</label>
            <input id="InvoiceID" name="InvoiceID" value="@Model.InvoiceID" class="w-full p-2 border rounded-lg bg-gray-100" readonly />
        </div>
        <div>
            <label for="InvoiceDate" class="block text-gray-700 font-medium">Ngày hóa đơn</label>
            <input id="InvoiceDate" name="InvoiceDate" type="date" value="@Model.InvoiceDate.ToString("yyyy-MM-dd")" class="w-full p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required />
        </div>
        <div>
            <label for="CustomerID" class="block text-gray-700 font-medium">Khách hàng</label>
            <select id="CustomerID" name="CustomerID" class="w-full p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                <option value="">-- Chọn khách hàng --</option>
                @foreach (var customer in customers)
                {
                    <option value="@customer.CustomerID" selected="@(customer.CustomerID == Model.CustomerID)">@customer.CustomerName (@customer.CustomerID)</option>
                }
            </select>
        </div>
        <div>
            <h3 class="text-lg font-medium mb-2">Chi tiết hóa đơn</h3>
            <div id="details">
                @for (int i = 0; i < Model.Details.Count; i++)
                {
                    <div class="detail-row mb-4" data-index="@i">
                        <input type="hidden" name="Details[@i].InvoiceID" value="@Model.InvoiceID" />
                        <div class="flex space-x-2">
                            <div class="flex-1">
                                <label class="block text-gray-700 font-medium">Sản phẩm</label>
                                <select name="Details[@i].ProductID" class="w-full p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                                    <option value="">-- Chọn sản phẩm --</option>
                                    @foreach (var product in products)
                                    {
                                        <option value="@product.ProductID" selected="@(product.ProductID == Model.Details[i].ProductID)">@product.ProductName (@product.ProductID) - @product.Price.ToString("N0")₫</option>
                                    }
                                </select>
                            </div>
                            <div class="flex-1">
                                <label class="block text-gray-700 font-medium">Số lượng</label>
                                <input name="Details[@i].Quantity" type="number" min="1" max="1000" value="@Model.Details[i].Quantity" class="w-full p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Số lượng" required />
                            </div>
                            <div>
                                <label class="block text-gray-700 font-medium">&nbsp;</label>
                                <button type="button" onclick="removeDetail(this)" class="bg-red-600 text-white p-2 rounded-lg hover:bg-red-700 transition duration-200">Xóa</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
            @if (products.Any())
            {
                <button type="button" onclick="addDetail()" class="bg-green-600 text-white p-2 rounded-lg hover:bg-green-700 transition duration-200">Thêm chi tiết</button>
            }
        </div>
        <button type="submit" class="bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 transition duration-200">Cập nhật</button>
    </form>
</div>

@section Scripts {
    <script>
        let detailIndex = @Model.Details.Count;
        const products = @Html.Raw(Json.Serialize(products));

        function escapeHtml(unsafe) {
            return unsafe
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }

        function addDetail() {
            if (!products || !Array.isArray(products) || products.length === 0) {
                alert("Không có sản phẩm nào để chọn.");
                return;
            }

            const invoiceId = "@Model.InvoiceID";
            const detailDiv = document.createElement('div');
            detailDiv.className = 'detail-row mb-4';
            detailDiv.setAttribute('data-index', detailIndex);
            detailDiv.innerHTML = `
                <input type="hidden" name="Details[${detailIndex}].InvoiceID" value="${invoiceId}" />
                <div class="flex space-x-2">
                    <div class="flex-1">
                        <label class="block text-gray-700 font-medium">Sản phẩm</label>
                        <select name="Details[${detailIndex}].ProductID" class="w-full p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                            <option value="">-- Chọn sản phẩm --</option>
                            ${products.map(p => `<option value="${p.productID}" data-price="${p.price}">${escapeHtml(p.productName)} (${p.productID}) - ${Number(p.price).toLocaleString('vi-VN')}₫</option>`).join('')}
                        </select>
                    </div>
                    <div class="flex-1">
                        <label class="block text-gray-700 font-medium">Số lượng</label>
                        <input name="Details[${detailIndex}].Quantity" type="number" min="1" max="1000" class="w-full p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Số lượng" required />
                    </div>
                    <div>
                        <label class="block text-gray-700 font-medium">&nbsp;</label>
                        <button type="button" onclick="removeDetail(this)" class="bg-red-600 text-white p-2 rounded-lg hover:bg-red-700 transition duration-200">Xóa</button>
                    </div>
                </div>
            `;
            document.getElementById('details').appendChild(detailDiv);
            detailIndex++;
        }

        function removeDetail(button) {
            const detailRows = document.querySelectorAll('.detail-row');
            if (detailRows.length > 1) {
                button.closest('.detail-row').remove();
                reindexDetails();
            } else {
                alert('Phải có ít nhất một chi tiết hóa đơn');
            }
        }

        function reindexDetails() {
            const detailRows = document.querySelectorAll('.detail-row');
            detailRows.forEach((row, index) => {
                row.setAttribute('data-index', index);
                const invoiceIdInput = row.querySelector('input[name*="InvoiceID"]');
                const productSelect = row.querySelector('select[name*="ProductID"]');
                const quantityInput = row.querySelector('input[name*="Quantity"]');
                if (invoiceIdInput) {
                    invoiceIdInput.name = `Details[${index}].InvoiceID`;
                }
                if (productSelect) {
                    productSelect.name = `Details[${index}].ProductID`;
                }
                if (quantityInput) {
                    quantityInput.name = `Details[${index}].Quantity`;
                }
            });
            detailIndex = detailRows.length;
        }
    </script>
}